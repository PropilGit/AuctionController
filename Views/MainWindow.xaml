<Window x:Class="AuctionController.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:l="clr-namespace:AuctionController"
        xmlns:vm="clr-namespace:AuctionController.ViewModels"
        xmlns:cmd="clr-namespace:AuctionController.Infrastructure.Commands" 
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="800">

    <Window.DataContext>
        <vm:MainWindowViewModel/>
    </Window.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <DockPanel Grid.Row="0"
                   Background="LightBlue">
            <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" Width="400">
                <TextBlock Margin="5,5,5,5" Width="150" Height="40"
                       FontSize="32" FontFamily="Impact" TextAlignment="Center" 
                       Text="МЭТС"/>
                <ComboBox Margin="5,10,5,10" Width="200" Height="25"
                          ItemsSource="{Binding Bidders}" DisplayMemberPath="Name"
                          SelectedItem="{Binding SelectedBidder}"/>
            </StackPanel>
            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal" Width="280">
                <CheckBox VerticalAlignment="Center" IsEnabled="False"
                          IsChecked="{Binding Checked, Mode=OneWay}"/>
                <Button Margin="5,10,5,10"
                    Width="70" Height="30" Content="Проверка"
                    Command="{Binding CheckMETSCommand}">
                </Button>
                <CheckBox VerticalAlignment="Center" IsEnabled="False"
                          IsChecked="{Binding Started, Mode=OneWay}"/>
                <Button Margin="5,10,5,10"
                    Width="70" Height="30" Content="Запуск"
                    Command="{Binding StartCommand}">
                    
                </Button>
            </StackPanel>
            
        </DockPanel>
        <TabControl Grid.Row="1">
            <TabItem Header="Список лотов">
                <DockPanel>
                    <StackPanel  DockPanel.Dock="Top">
                        <WrapPanel DockPanel.Dock="Top" Margin="5,2,5,2">
                            <TextBlock Text="ID торгов:" Margin="0,0,5,0"/>
                            <TextBox Width="70" Margin="5,0,5,0" TextAlignment="Right"
                                     Text="{Binding AuctionID}"/>
                            <Button Content="Загрузить лоты" Margin="5,0,5,0" 
                                Command="{Binding GetAllLotsCommand}"/>
                            <Button Content="Очистить список" Margin="5,0,5,0"
                                Command="{Binding ClearLotsCommand}"/>
                            <!--Button Content="Перезагрузить выбранные лоты" 
                                Command="{Binding ReloadLotsCommand}"/-->
                        </WrapPanel>
                        <WrapPanel DockPanel.Dock="Top" Margin="5,2,5,2">
                            <Button Content="Обновление лотов" Margin="0,0,5,0"
                                Command="{Binding UpdateLotsCommand}"/>
                            <CheckBox Content="Автообновление" Height="15" FontSize="11" Margin="5,0,5,0"
                                  IsChecked="{Binding AutoUpdateLots, Mode=TwoWay}"/>
                            <CheckBox Content="Автоставка" Height="15" FontSize="11" Margin="50,0,5,0"
                                  IsChecked="{Binding AutoBet, Mode=TwoWay}"/>
                            <ComboBox Width="50"
                                      ItemsSource="{Binding BetTimer}"
                                      SelectedItem="{Binding SelectedBetTimer}"/>
                            <TextBlock FontSize="11" VerticalAlignment="Center" Margin="5,0,5,0"
                                       Text=" мин. до окончания"/>
                            <Button Content="Сделать ставку" Background="Red" Margin="5,0,5,0"
                                    Command="{Binding MakeBetsCommand}"/>
                        </WrapPanel>
                        <WrapPanel DockPanel.Dock="Top" Margin="5,2,5,2">
                            
                        </WrapPanel>
                    </StackPanel>
                    <DataGrid DockPanel.Dock="Bottom" 
                              ItemsSource="{Binding Lots}" AutoGenerateColumns="False">
                        <DataGrid.Columns>
                            <DataGridCheckBoxColumn Header="!" Binding="{Binding Checked, Mode=TwoWay}"/>
                            <DataGridTextColumn Header="#" Binding="{Binding Index}"/>
                            <DataGridTextColumn Header="Id" Binding="{Binding Id}"/>
                            <DataGridTextColumn Header="№" Binding="{Binding Number}"/>
                            <DataGridTextColumn Header="Name" Width="200" Binding="{Binding Name}"/>

                            <DataGridTextColumn Header="Оставшееся время" Binding="{Binding RemainingTime, StringFormat=hh\\:mm\\:ss}"/>
                            <DataGridTextColumn Header="Время завершения" Binding="{Binding EndTime, StringFormat=hh\\:mm\\:ss}"/>
                            <DataGridTextColumn Header="Рост цены" Binding="{Binding PriceDifference, Mode=OneWay}"/>
                            <DataGridTextColumn Header="Рост цены, %" Binding="{Binding PriceDifferenceProc, Mode=OneWay}"/>
                            <DataGridTextColumn Header="Текущая ставка" Binding="{Binding CurrentPrice}"/>
                            <DataGridTextColumn Header="Текущая ставка" Binding="{Binding Bets[0]}"/>
                            <DataGridTextColumn Header="Ставка-1" Binding="{Binding Bets[1], StringFormat=HH:mm:ss}"/>
                            <DataGridTextColumn Header="Ставка-2" Binding="{Binding Bets[2]}"/>
                            <DataGridTextColumn Header="Ставка-3" Binding="{Binding Bets[3]}"/>
                        </DataGrid.Columns>
                        <!--DataGrid.RowDetailsTemplate>
                            <DataTemplate>
                                <Border BorderThickness="0" Background="BlanchedAlmond" Padding="10">
                                    <StackPanel Orientation="Vertical">
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontSize="12" Text="1: " VerticalAlignment="Center" />
                                            <TextBlock FontSize="16" Foreground="MidnightBlue" Text="{Binding Bets[0]}" VerticalAlignment="Center" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontSize="12" Text="2: " VerticalAlignment="Center" />
                                            <TextBlock FontSize="16" Foreground="MidnightBlue" Text="{Binding Bets[1]}" VerticalAlignment="Center" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontSize="12" Text="3: " VerticalAlignment="Center" />
                                            <TextBlock FontSize="16" Foreground="MidnightBlue" Text="{Binding Bets[2]}" VerticalAlignment="Center" />
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock FontSize="12" Text="3: " VerticalAlignment="Center" />
                                            <TextBlock FontSize="16" Foreground="MidnightBlue" Text="{Binding Bets[3]}" VerticalAlignment="Center" />
                                        </StackPanel>
                                    </StackPanel>
                                </Border>
                            </DataTemplate>
                        </DataGrid.RowDetailsTemplate-->
                    </DataGrid>
                </DockPanel>
            </TabItem>
            <TabItem Header="Настройки">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="310"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" Margin="5,5,0,0"
                           Content="Log"/>
                    <ScrollViewer Grid.Column="0" Margin="5,30,0,0">
                        <TextBlock TextWrapping="Wrap"
                                   Text="{Binding Log}"/>
                    </ScrollViewer>
                    <StackPanel Grid.Column="1" Margin="5,10,5,10" IsEnabled="{Binding Started}">
                        <CheckBox Content="Использвать SendKeys(Enter) вместо Click()"
                                  IsChecked="{Binding UseSendKeys}"/>
                        
                        <StackPanel Margin="0,10,0,0" Orientation="Horizontal">
                            <TextBlock Text="Ожидание загрузки элемента, сек.:"/>
                            <TextBox Width="25" Margin="5,0,5,0"
                                     Text="{Binding WaitTime, UpdateSourceTrigger=PropertyChanged}"/>
                            <Button Content="Применить"
                                    Command="{Binding ChangeWaitTimeCommand}"/>
                        </StackPanel>
                        
                    </StackPanel>
                </Grid>
            </TabItem>
        </TabControl>
        <DockPanel Grid.Row="2"
                   Background="LightBlue">
            <TextBlock Margin="5,5,5,5"
                       FontSize="10"
                       Text="{Binding Status}"/>
        </DockPanel>
    </Grid>
</Window>
